{"version":3,"sources":["config.js","components/Menu/Menu.jsx","components/Menu/index.js","pages/index.js","pages/index.md","pages/about.md","pages/projects.md","pages/social.md","pages/work.md","components/Content/code-block.js","components/Content/Content.jsx","components/Content/index.js","App.js","serviceWorker.js","index.js"],"names":["MENU","name","value","Menu","_ref","handleMenuChange","react_default","a","createElement","className","map","item","onClick","key","pages","index","about","projects","social","work","React","require","hljs","window","CodeBlock","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setRef","bind","assertThisInitialized","el","codeEl","highlightCode","highlightBlock","ref","concat","language","PureComponent","defaultProps","Content","activePage","react_markdown_default","source","renderers","code","App","_useState","useState","_useState2","slicedToArray","setActivePage","components_Menu","ev","currentTarget","components_Content","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4KAMaA,EAAO,CAClB,CAAEC,KAAM,OAAQC,MAAO,SACvB,CAAED,KAAM,QAASC,MAAO,SACxB,CAAED,KAAM,WAAYC,MAAO,YAC3B,CAAED,KAAM,OAAQC,MAAO,QACvB,CAAED,KAAM,SAAUC,MAAO,iBCYZC,ICrBAA,EDIf,SAAAC,GAAoC,IAApBC,EAAoBD,EAApBC,iBACd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZT,EAAKU,IAAI,SAAAC,GAAI,OACZL,EAAAC,EAAAC,cAAA,UACEN,MAAOS,EAAKT,MACZO,UAAU,YACVG,QAASP,EACTQ,IAAKF,EAAKT,OAETS,EAAKV,UEGDa,EARD,CACZC,MCZa,mcDabC,MEba,0ZFcbC,SGda,+ZHebC,OIfa,wQJgBbC,KKhBa,urCCATC,EAAQC,EAAQ,GAEhBC,EAAOC,OAAOD,KAEdE,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,OAASP,EAAKO,OAAOC,KAAZP,OAAAQ,EAAA,EAAAR,CAAAD,IAFGA,sEAKZU,GACLP,KAAKQ,OAASD,8CAIdP,KAAKS,6DAILT,KAAKS,wDAILhB,EAAKiB,eAAeV,KAAKQ,yCAIzB,OACEjB,EAAAZ,cAAA,WACEY,EAAAZ,cAAA,QAAMgC,IAAKX,KAAKI,OAAQxB,UAAS,YAAAgC,OAAcZ,KAAKJ,MAAMiB,WACvDb,KAAKJ,MAAMvB,eA1BEkB,EAAMuB,eAiC9BnB,EAAUoB,aAAe,CACvBF,SAAU,IAQGlB,yBC1BAqB,IClBAA,EDOf,SAAAzC,GAAiC,IAAd0C,EAAc1C,EAAd0C,WACjB,OACExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CACEyC,OAAQlC,EAAMgC,GACdG,UAAW,CAAEC,KAAM1B,cEQZ2B,MAff,WAAe,IAAAC,EACuBC,mBAAS,SADhCC,EAAA3B,OAAA4B,EAAA,EAAA5B,CAAAyB,EAAA,GACNN,EADMQ,EAAA,GACME,EADNF,EAAA,GAOb,OACEhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACiD,EAAD,CAAMpD,iBANV,SAA0BqD,GACxBF,EAAcE,EAAGC,cAAczD,UAM7BI,EAAAC,EAAAC,cAACoD,EAAD,CAASd,WAAYA,MCLPe,QACW,cAA7BtC,OAAOuC,SAASC,UAEe,UAA7BxC,OAAOuC,SAASC,UAEhBxC,OAAOuC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5D,EAAAC,EAAAC,cAAC2D,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8ba200d2.chunk.js","sourcesContent":["/*\nAdd new menu here. Each menu item must have unique value.\nThe value must be consistent with the markdown file name in the \n`pages/` directory\n*/\n\nexport const MENU = [\n  { name: 'Home', value: 'index' },\n  { name: 'About', value: 'about' },\n  { name: 'Projects', value: 'projects' },\n  { name: 'Work', value: 'work' },\n  { name: 'Social', value: 'social' },\n];\n","import React from 'react';\n\nimport { MENU } from '../../config';\n\nimport './Menu.css';\n\nfunction Menu({ handleMenuChange }) {\n  return (\n    <div className=\"menu\">\n      {MENU.map(item => (\n        <button\n          value={item.value}\n          className=\"menu-item\"\n          onClick={handleMenuChange}\n          key={item.value}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default Menu;\n","import Menu from './Menu';\n\nexport default Menu;\n","/*\nRegister new content here.\nUse the same value as the value in the menu for the mapping.\n*/\n\nimport index from './index.md';\nimport about from './about.md';\nimport projects from './projects.md';\nimport social from './social.md';\nimport work from './work.md';\n\nconst pages = {\n  index,\n  about,\n  projects,\n  social,\n  work,\n};\n\nexport default pages;\n","export default \"## Hi there, thank you for visiting!\\n\\nMy name is Eko.\\n\\nFrom building an expense tracker system for a friend using Excel when I was 16 to writing lines of code which directly impact thousands of people during my internships, my purpose is always to build things which make a difference.\\n\\nIf you have an opportunity where I can contribute, hit me up!\\n\\nTechnologies I am familiar with: Javascript; Python; Java; React; Spring; C#; .NET Core.\\n\"","export default \"## More about me\\n\\n- Came from a small city in Indonesia üáÆüá©\\n- Lives in Singapore üá∏üá¨\\n- Problem solver at heart, a software engineer in the making\\n- Studying at [Nanyang Technological University](https://www.ntu.edu.sg/Pages/home.aspx)\\n- ‚öíÔ∏è Given the chance, would love to design and build scalable systems üîß\\n- Like doing volunteer work\\n\"","export default \"## Some things I've built\\n\\n- [Dev Portfolio Template](https://github.com/ekoeditaa/dev-portfolio-template):\\n  This website itself. Provided an easy way for anyone to use and extend the template.\\n\\n- [PINTU Website](https://pintusingapura.org):\\n  Developed a brand new website for PINTU Singapura.\\n\\n- [ICN Musical](https://show.icnmusical.com):\\n  Participated in the development of the ticketing system.\\n\"","export default \"## Social media:\\n\\n- [Github](https://github.com/ekoeditaa)\\n- [Medium](https://medium.com/@ekoeditaa)\\n- [Facebook](https://www.facebook.com/eko.edita)\\n- [LinkedIn](https://www.linkedin.com/in/ekoedita/)\\n- [Instagram](https://www.instagram.com/ekoeditaa/)\\n\"","export default \"## I have interned in several companies\\n\\n- In [Zendesk](https://zendesk.com), I contributed in developing better agent experience, integrating third party messaging applications to Zendesk Chat, and building back end services to support seamless chat integrations across platforms.\\n\\n- I am also involved in the running of a social enterprise called [Hinggi](https://www.hinggi.com/). We help women in Sumba improve their livelihood. Check out our website if you are looking for meaningful, personalized gifts.\\n\\n- In summer 2019, I interned in [Visa](https://visa.com). I developed a feature which allows testing robots to recognize test samples via QR codes. This feature removes the need for manual inventory tracking used so far. Used .NET Core, C#, and Javascript.\\n\\n- I have also done part time work on two research projects in NTU. The first one is building a simulation system for drones in Singapore airspace. The second project was to implement and test the efficiency of an encryption algorithm.\\n\\n- In 2017, I spent my summer as an intern in [Hipster](https://hipster-inc.com/) building two web applications using Ruby on Rails.\\n\"","const React = require('react');\nconst PropTypes = require('prop-types');\nconst hljs = window.hljs;\n\nclass CodeBlock extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.setRef = this.setRef.bind(this);\n  }\n\n  setRef(el) {\n    this.codeEl = el;\n  }\n\n  componentDidMount() {\n    this.highlightCode();\n  }\n\n  componentDidUpdate() {\n    this.highlightCode();\n  }\n\n  highlightCode() {\n    hljs.highlightBlock(this.codeEl);\n  }\n\n  render() {\n    return (\n      <pre>\n        <code ref={this.setRef} className={`language-${this.props.language}`}>\n          {this.props.value}\n        </code>\n      </pre>\n    );\n  }\n}\n\nCodeBlock.defaultProps = {\n  language: '',\n};\n\nCodeBlock.propTypes = {\n  value: PropTypes.string.isRequired,\n  language: PropTypes.string,\n};\n\nexport default CodeBlock;\n","import React from 'react';\n\nimport pages from '../../pages';\n\nimport './Content.css';\n\nimport CodeBlock from './code-block';\nimport ReactMarkdown from 'react-markdown';\n\nfunction Content({ activePage }) {\n  return (\n    <div className=\"content\">\n      <ReactMarkdown\n        source={pages[activePage]}\n        renderers={{ code: CodeBlock }}\n      />\n    </div>\n  );\n}\n\nexport default Content;\n","import Content from './Content';\n\nexport default Content;\n","import React, { useState } from 'react';\n\nimport Menu from './components/Menu';\nimport Content from './components/Content';\n\nimport './App.css';\n\nfunction App() {\n  const [activePage, setActivePage] = useState('index');\n\n  function handleMenuChange(ev) {\n    setActivePage(ev.currentTarget.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <Menu handleMenuChange={handleMenuChange} />\n      <Content activePage={activePage} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}